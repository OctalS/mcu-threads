mcu-threads: Arch interface
===========================

This document describes all details about the functions that need be implemented.

* arch_enable_interrupts() and arch_disable_interrupts()

        This calls should enable/disable globally the interrupts on the device.

* arch_init()

        Called by threads_init() with interrupts disabled.
        All arch specific initialization must be done here. This is the right place
        to setup your hardware timer. You should choose a good timer tick value that
        exploits the system in the best possible way.

* arch_threads_lock() and arch_threads_unlock()

        These functions must disable/enable respectively only the hardware timer if possible.
        It's not recommended to disable all interrupts globally here.
        Care must be taken in arch_threads_lock(). The function must ensure that the timer is disabled
        and no timer interrupts will be generated after exiting.

* arch_prepare_thread(thread_t *t, void *fn)

        Called from thread_create() This call should at least prepare the thread 't' stack.
        This is specific to your scheduler design.

* arch_schedule()

        This call must invoke your scheduler and give up the cpu to another thread.
        Be very careful when designing this call. The simplest way is to generate a software
        interrupt to your timer isr.
